resources:
- icon: github
  name: cf-acceptance-tests
  source:
    branch: release-candidate
    uri: https://github.com/sap-contributions/cf-acceptance-tests.git
  type: git
  check_every: 1m

- icon: github
  name: cf-deployment
  source:
    branch: release-candidate
    uri: https://github.com/sap-contributions/cf-deployment.git
  type: git
  check_every: 1m

- icon: github
  name: cf-deployment-concourse-tasks
  source:
    uri: https://github.com/cloudfoundry/cf-deployment-concourse-tasks.git
  type: git

- icon: dna
  name: bionic-stemcell
  source:
    name: bosh-google-kvm-ubuntu-bionic-go_agent
  type: bosh-io-stemcell

- icon: github
  name: runtime-ci
  source:
    uri: https://github.com/cloudfoundry/runtime-ci.git
  type: git

- name: bbl-state
  type: s3
  source:
    region_name: eu-central-1
    bucket: bionic-stemcell-test
    versioned_file: bbl-state.tar.gz
    access_key_id: #TODO
    secret_access_key: #TODO
    initial_version: '0'

jobs:
- name: bbl-up
  serial: true
  plan:
  - in_parallel:
    - get: cf-deployment-concourse-tasks
    - get: bbl-state
      params:
        unpack: true
    - task: bbl-up
      file: cf-deployment-concourse-tasks/bbl-up/task.yml
      input_mapping:
        bbl-config: cf-load-test-pipeline
      params:
        BBL_AWS_ACCESS_KEY_ID: #TODO
        BBL_AWS_SECRET_ACCESS_KEY: #TODO
        BBL_AWS_REGION: eu-west-1
        BBL_IAAS: aws
        BBL_CONFIG_DIR: bbl-patches
        BBL_LB_CERT: ../cert.pem
        BBL_LB_KEY: ../key
        SKIP_LB_CREATION: false
        LB_DOMAIN: ((sys_domain))
        STORE_BBL_STATE_AS_TARBALL: true
      ensure:
        put: bbl-state
        params:
          file: updated-bbl-state/bbl-state.tgz

- name: deploy-cf
  plan:
  - in_parallel:
      steps:
      - get: bionic-stemcell
      - get: cf-deployment
      - get: cf-deployment-concourse-tasks
      - get: runtime-ci
      - get: bbl-state
        passed:
        - bbl-up
  - file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
    params:
      IGNORE_ERRORS: "true"
    task: bosh-delete-cf-deployment
  - file: cf-deployment-concourse-tasks/bosh-cleanup/task.yml
    task: bosh-cleanup
  - file: runtime-ci/tasks/bosh-upload-stemcell/task.yml
    input_mapping:
      stemcell: bionic-stemcell
    task: upload-bionic-stemcell
  - task: update-dns-runtime-config
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: cloudfoundry/cf-deployment-concourse-tasks
      inputs:
      - name: cf-deployment-concourse-tasks
      run:
        dir: ""
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          source cf-deployment-concourse-tasks/shared-functions
          setup_bosh_env_vars
          cat <<EOT > /tmp/add-bionic.yml
          ---
          - type: replace
            path: /addons/name=bosh-dns/include/stemcell/-
            value:
              os: ubuntu-bionic
          EOT
          bosh runtime-config --name=dns > /tmp/dns.yml
          bosh interpolate -o /tmp/add-bionic.yml /tmp/dns.yml > /tmp/updated-dns.yml
          bosh -n update-runtime-config --name=dns /tmp/updated-dns.yml
  - file: cf-deployment-concourse-tasks/bosh-deploy/task.yml
    input_mapping:
      ops-files: cf-deployment
    params:
      OPS_FILES: |
        operations/use-bionic-stemcell.yml
        operations/use-internal-lookup-for-route-services.yml
        operations/experimental/colocate-smoke-tests-on-cc-worker.yml
    task: deploy-cf
  - in_parallel:
      steps:
      - file: cf-deployment-concourse-tasks/open-asgs-for-bosh-instance-group/task.yml
        params:
          INSTANCE_GROUP_NAME: credhub
          SECURITY_GROUP_NAME: credhub
        task: open-asgs-for-credhub
      - file: cf-deployment-concourse-tasks/open-asgs-for-bosh-instance-group/task.yml
        params:
          INSTANCE_GROUP_NAME: uaa
          SECURITY_GROUP_NAME: uaa
        task: open-asgs-for-uaa
      - file: cf-deployment-concourse-tasks/set-feature-flags/task.yml
        params:
          ENABLED_FEATURE_FLAGS: |
            diego_docker
            task_creation
            service_instance_sharing
        task: enable-docker-and-tasks
  public: true
  serial: true

- name: run-smoke-tests
  plan:
  - in_parallel:
      steps:
      - get: cf-deployment-concourse-tasks
      - get: cf-deployment # remove in PR | replace with toolsmiths env 
        passed:
        - deploy-cf
  - file: cf-deployment-concourse-tasks/run-errand/task.yml
    params:
      ERRAND_NAME: smoke_tests
      INSTANCE: cc-worker/first
    task: bosh-run-errand-smoke-tests
  public: true
  serial: true

- name: run-cats
  plan:
  - in_parallel:
      steps:
      - get: cf-deployment-concourse-tasks
      - get: cf-acceptance-tests
      - get: cf-deployment # remove in PR | replace with toolsmiths env 
        passed:
        - run-smoke-tests
  - config:
      image_resource:
        source:
          repository: cloudfoundry/cf-deployment-concourse-tasks
        type: docker-image
      inputs:
      - name: cf-deployment-concourse-tasks
      outputs:
      - name: integration-configs
      params:
        GIT_COMMIT_EMAIL: cf-release-integration@pivotal.io
        GIT_COMMIT_USERNAME: CI Bot
      platform: linux
      run:
        args:
        - -c
        - |
          #!/bin/bash
          source cf-deployment-concourse-tasks/shared-functions
          DOMAIN="$(jq -r '.cf.api_url' toolsmiths-env/metadata | cut -d. -f2-)"
          pushd integration-configs > /dev/null
          git init
          set_git_config
          cat <<EOT > integration-config.json
          {
            "api": "api.${DOMAIN}",
            "admin_user": "admin",
            "admin_password": "",
            "apps_domain": "${DOMAIN}",
            "artifacts_directory": "logs",
            "skip_ssl_validation": true,
            "use_http": true,
            "timeout_scale": 1,
            "include_apps": true,
            "include_backend_compatibility": true,
            "include_capi_no_bridge": true,
            "include_container_networking": true,
            "include_detect": true,
            "include_docker": true,
            "include_internet_dependent": true,
            "include_route_services": true,
            "include_routing": true,
            "include_security_groups": true,
            "include_service_instance_sharing": true,
            "include_services": true,
            "include_ssh": true,
            "include_sso": true,
            "include_tasks": true,
            "include_tcp_routing": true,
            "include_v3": true,
            "include_zipkin": true,
            "credhub_client": "credhub_admin_client",
            "credhub_secret": "",
            "credhub_mode": "assisted"
          }
          EOT
          git add .
          git commit -m "Create integration config"
        path: bash
    task: create-integration-config
  - file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
    params:
      CATS_INTEGRATION_CONFIG_FILE: integration-config.json
    task: update-integration-configs
  - file: cf-deployment-concourse-tasks/run-cats/task.yml
    input_mapping:
      integration-config: updated-integration-configs
    params:
      CONFIG_FILE_PATH: integration-config.json
    task: run-cats
  public: true
  serial: true
